version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  # HTTP statique
  http-static:
    image: img-stat
    labels:
      - traefik.http.routers.http-static.rule=Host(`fortune-cat.local`) && !PathPrefix(`/api/`)
      #- traefik.http.services.http-static-service.loadbalancer.server.port=80 # facultatif si 1 port exposé ?
      - traefik.http.services.http-static.loadbalancer.sticky.cookie=true
      - traefik.http.services.http-static.loadbalancer.sticky.cookie.name=FORTUNE_CAT_SESSID
    
    # écrasable avec docker-compose up -d --scale http-dynamic=2
    deploy:
      mode: replicated
      replicas: 2
  
  # HTTP dynamique (API REST)
  http-dynamic:
    image: img-dyn
    labels:
      - traefik.http.routers.http-dynamic.rule=Host(`fortune-cat.local`) && PathPrefix(`/api/`)
      #- "traefik.http.middlewares.http-dynamic.replacepathregex.regex=^/api/(.*)"
      #- "traefik.http.middlewares.http-dynamic.replacepathregex.replacement=/$$1"
      #- traefik.http.services.http-dynamic-service.loadbalancer.server.port=3000 # facultatif si 1 port exposé ?
    
    # écrasable avec docker-compose up -d --scale http-dynamic=2
    deploy:
      mode: replicated
      replicas: 2
