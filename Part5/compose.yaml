version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  # HTTP statique
  http-static:
    image: img-stat
    labels:
      - "traefik.http.routers.rt-not-api.rule=Host(`fortune-cat.local`) && !PathPrefix(`/api/`)"
      - "traefik.http.routers.rt-not-api.service=sv-static" # (facultatif si 1 seul service)
      - "traefik.http.services.sv-static.loadbalancer.server.port=80" # (facultatif si 1 seul port exposé)
      - "traefik.http.services.sv-static.loadbalancer.sticky.cookie.name=LOAD_BALANCING_ROUTE"
    deploy:
      mode: replicated
      replicas: 5
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  # HTTP dynamique (API REST)
  http-dynamic:
    image: img-dyn
    labels:
      - "traefik.http.routers.rt-api.rule=Host(`fortune-cat.local`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.rt-api.middlewares=mw-api-path"
      - "traefik.http.routers.rt-api.service=sv-dynamic" # (facultatif si 1 seul service)
      - "traefik.http.middlewares.mw-api-path.replacepathregex.regex=^/api/(.*)"
      - "traefik.http.middlewares.mw-api-path.replacepathregex.replacement=/$$1"
      - "traefik.http.services.sv-dynamic.loadbalancer.server.port=3000" # (facultatif si 1 seul port exposé)
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
